# format is : n_targets, n_variables, expr1, (train_set_type, train_set_range, test_set_type, test_set_range)*number of variables
# from arxiv.1805.10365 last page
# all runs made with QD pool algo, init pool size 4000
# with dictionnary  {'1': 'halt', '2': 'A', '3': 'x0', '4': 'np.cos(', '5': 'np.sin(', '6': 'np.exp(', '7': 'np.log(', '8': '+', '9': '-', '10': '*', '11': '/', '12': '**', '13': '0', '14': '1', '15': 'infinity'}
# plus variable y and z when required
# SENTENCELENGHT = 12, MAX_DEPTH = 1, parsimony = inf, max_A_number = inf, usederivativecost = 1, extend =1, pmutate=0.4, pcross =0.8
# and a qd pool : bina = 10, maxa = 10, binf = 8, maxf = 8
# ie 10*8*24 grid
# max iteration : 100

#  ------------------- initial tests -------------------
#test planck
#1, 1, x**3/(np.exp(x) -1), E, 0.01, 8, 0.1, U, 0, 9, 100, 15

#test 2 var
#1, 2, x*y, U, -1, 1, 20, U, -1, 1, 20, U, -1, 1, 20, U, -1, 1, 100, 15

#test 3 var
#1, 3, x*y*z, U, -1, 1, 10, U, -1, 1, 20, U, -1, 1, 10, U, -1, 1, 100, U, 1, 2, 10, U, 1, 2, 100, 15


#  -------------------trivial targets (found at first iteration all the time) -------------------


# target Keijszer-10 :
#1, 2, x**y, U, 0, 1, 10, E, 0, 1, 0.1, U, 0, 1, 10, U, 0, 1, 100


# target  Nguyen-1:
#1, 1, x + x**2 + x**3, U, 0, 1, 40, U, -2, 2, 200

# target : Keijszer-13 :
#1, 2, 6*np.sin(x)*np.sin(y), U, -3, 3, 20, E, -3, 3, 0.1, U, -3, 3, 20, E, -3, 3, 0.1

# target : Korns-7 : (becomes trivial thanks to the auto rescaling on unit range, otherwise is probably not)
#1, 1, 213.80940889*(1 - np.exp(-0.54723748542*x)), U, -50, 50, 100, U, -50, 50, 100


# target 18 : Nguyen-10:
# 1, 2,  2*np.sin(x)*np.sin(y), U, -1, 1, 20, U, -1, 1, 10, U, -1, 1, 20, U, -1, 1, 10



#  ------------------- actual targets : Very easy ones in L=15 -------------------

# target 0 : Nguyen-2:
1, 1, x + x**2 + x**3 + x**4, U, 0, 1, 20, U, 0, 2, 200, 15


# target 1 : Koza-3:
1, 1, x**6 -2*x**4 + x**2, U, 0, 1, 20, U, 0, 2, 200, 15


# target 2 : Meier-3:
1, 2, (x**2)*(y**2)/(x+y), U, 0, 1, 20, U, 0, 2, 50,  U, 0, 1, 20, U, 0.01, 2, 50, 15


# target 3 : Meier-4:
1, 2, (x**5)/(y**3), U, 0, 1, 20, U, 0, 2, 50,  U, 0, 1, 20, U, 0.01, 2, 50, 15


# target 4 : Nguyen-9:
1, 2, np.sin(x)+ np.sin(y**2), U, 0, 1, 20, U, 0, 2, 100, U, 0, 1, 20, U, 0.01, 2, 100, 15


#  ------------------- actual targets : easy ones in L = 15 -------------------

# target 5 : Burks
1, 1, 4*x**4 + 3*x**3 + 2*x**2 + x, U, 0, 1, 20, U, 0, 3, 200, 15


# target 6 : Keijzer-1
1, 1, 0.3*x*np.sin(2*np.pi*x), E, 0, 1, 0.05, E, 0, 10, 0.05, 15


# target 7 : Keijzer-2
1, 1, 0.3*x*np.sin(2*np.pi *x), E, 0, 2, 0.05, E, 0, 4, 0.05, 15


# target 8 : Keijzer-3
1, 1, 0.3*x*np.sin(2*np.pi *x), E, 0, 3, 0.05, E, 0, 4, 0.05, 15


# target 9 : Nguyen-5:
1, 1, np.sin(x**2)*np.cos(x) -1, U, 0, 1, 20, U, 0, 1.2, 200, 15


# target 10 : Nguyen-6:
1, 1, np.sin(x)+ np.sin(x + x**2), U, 0, 1, 20, U, 0, 1.2, 200, 15


# target 11 : Sine (the same, different interval):
1, 1,  np.sin(x) + np.sin(x + x**2), E, 0, 6.2, 0.1, U, 0, 10, 100, 15


# target 12 : Koza-2:
1, 1, x**5 -2*x**3 + x, U, 0, 1, 20, U, 0, 2, 200, 15


# -------------------- 20

# target 13 : Keijszer-14 :
1, 2, 8/(2 + x**2 + y**2), U, 0, 3, 20, E, 0, 4, 0.1, U, 0, 3, 20, E, 0, 4, 0.1, 20


# target 14 : Nguyen-3:
1, 1, x + x**2 + x**3 + x**4 + x**5, U, 0, 1, 20, U, 0, 2, 200, 20


# target 15 : Nguyen-7:
1, 1, np.log(1+x) + np.log(1+ x**2), U, 0, 2, 20, U, 0, 3, 200, 25


# target 16 : Keijszer-9 :
#1, 1, np.log(x + np.sqrt(1+ x**2)), E, 0.01, 100, 1, U, 0.01, 200, 1000, 25


# -------------------- 30

# target 17 : R1:
1, 1,  ((x+1)**3)/(x**2 - x +1), E, 0, 2, 0.1, U, 0, 3, 100, 30


# target 18 : R2:
1, 1,  (x**5 - 3*x**3 +1)/(x**2 +1), E, 0, 2, 0.1, U, 0, 4, 400, 30


# target 19 : Keijzer-5
1, 3, 30*x*z/((x-10)*y**2), U, 0, 2, 5, U, 0, 3, 20, U, 0, 2, 5, U, 0, 3, 20, U, 1, 5, 10, U, 0, 20, 30


# target 20 : Keijszer-12 :
1, 2, x**4 - x**3 + (y**2)/2 - y, U, 0, 3, 20, E, 0, 4, 0.1, U, 0, 3, 20, E, 0, 4, 0.1, 30


# target 21 : Keijszer-15 :
1, 2, (x**3)/5 + (y**3)/2 - y - x, U, 0, 3, 20, E, 0, 4, 0.1, U, 0, 3, 20, E, 0, 4, 0.1, 30


# target 22 : Keijszer-11 :
1, 2, x*y + np.sin((x-1)*(y-1)), U, 0, 3, 20, E, 0, 4, 0.1, U, 0, 3, 20, E, 0, 4, 0.1, 30


# target 23 : Nguyen-4:
1, 1, x + x**2 + x**3+ x**4 + x**5 + x**6, U, 0, 1, 40, U, 0, 1.5, 200, 30


# target 24 : Pagie 1:
1, 2,  1/(1 + x**(-4)) + 1/(1+ y**(-4)), E, 0, 5, 0.2, U, 0, 6, 20, E, 0, 5, 0.2, U, 0, 6, 20, 30


# -------------------- 35

# target 25 : R3:
1, 1,  (x**6 + x**5)/(x**4 + x**3 +x**2 + x +1), E, 0, 1, 0.05, U, 0, 2, 100, 35


# target 26 : Vladislavleva 7 :
1, 2, (x-3)*(y-3) + 2*np.sin((x-4)*(y-4)), U, 0.05, 6.05, 20, U, 0, 12.35, 100, U, 0.05, 6.05, 20, U, 0, 12.35, 100, 35


# target 27 : Vladislavleva 1 :
1, 2, np.exp(-(x-1)**2)/(1.2 + (y-2.5)**2), U, 0.3, 4, 20, E, 0, 8, 0.1, U, 0.3, 4, 20, E, 0, 8, 0.1, 35


# -------------------- 40

# target 28 : Vladislavleva 5 :
1, 3, 30*(x-1)*(z-1)/((x-10)*y**2), U, 0.05, 2, 8, E, 0, 10, 0.5, U, 1, 2, 8, E, 0, 10, 0.5, U, 0.05, 2, 8, E, 0, 3, 0.5, 40


# target 29 : Keijzer-4
1, 1, x**3*np.exp(-x)*np.cos(x)*np.sin(x)*(np.cos(x)*np.sin(x)**2-1), E, 0, 10, 0.1, U, 0, 14, 1000, 40


# target 30 : Nonic
1, 1, x + x**2 + x**3 + x**4 + x**5 + x**6 + x**7 + x**8 + x**9, E, 0, 1, 0.05, U, 0, 2, 100, 40


# -------------------- 45

# target 31 : Vladislavleva 3 :
1, 2, x**3*np.exp(-x)*np.cos(x)*np.sin(x)*(np.cos(x)*np.sin(x)**2-1)*(y-5), E, 0.05, 10, 0.1, U, 0, 10, 50, E, 0.05, 10.05, 2, U, 0, 10, 10, 45


# target 32 : Vladislavleva 8 :
1, 2, ((x-3)**4 + (y-3)**3 -(y-3))/((y-2)**4 + 10), U, 0.05, 6.05, 20, E, 0, 12.35, 0.2,  U, 0.05, 6.05, 20, E, 0, 12.35, 0.2, 45
